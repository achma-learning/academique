name: Sync and Update Academic Pages

on:
  schedule:
    - cron: '0 0 * * *' # Daily at midnight, adjust as needed
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Fetch all history for merging

    - name: Configure Git
      run: |
        git config --global user.name 'GitHub Actions Bot'
        git config --global user.email 'github-actions@users.noreply.github.com'

    - name: Sync with Upstream
      run: |
        git remote add upstream https://github.com/academicpages/academicpages.github.io.git || true
        git fetch upstream
        git merge upstream/master -X theirs -m "Merge upstream changes" || true
        if [ $? -ne 0 ]; then
          echo "Merge conflict detected. Creating pull request for manual review."
          git checkout -b merge-attempt
          git add .
          git commit -m "Attempted merge from upstream with conflicts"
          echo "Creating pull request for conflict resolution"
          gh pr create -B master -H merge-attempt -t "Merge Conflict from Upstream" -b "Automatic merge failed due to conflicts. Please review and resolve manually."
          exit 0
        fi

    - name: Commit Changes
      if: success()
      run: |
        git add .
        if ! git diff-index --quiet HEAD; then
          git commit -m "Auto Update: Sync with upstream"
        fi

    - name: Push Changes
      if: success()
      run: |
        git push origin master

    - name: Build and Deploy
      if: success()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_site
        publish_branch: gh-pages # Adjust if different

    - name: Set up GitHub CLI
      if: failure()
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install GitHub CLI
      if: failure()
      run: |
        npm install -g @github/cli

    - name: GitHub CLI Authentication
      if: failure()
      run: |
        echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

    - name: Notify of Conflict via GitHub CLI
      if: failure()
      run: |
        gh issue create -t "Merge Conflict Alert" -b "There was a merge conflict when trying to sync with upstream. Please check the pull request created for conflict resolution."

env:
  GH_PAT: ${{ secrets.GH_PAT }} # Add this secret in your repository settings for GitHub CLI authentication
